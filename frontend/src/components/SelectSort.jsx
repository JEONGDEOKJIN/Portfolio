import React, { useEffect, useRef, useState } from "react";
import DropDownArrow from "./DropDownArrow";
import DropDownListOption from "./DropDownListOption";

const SelectSort = ({ setSortOption, sortOption }) => {
  const [isSortDropDown, setIsSortDropDown] = useState(false);
  const [viewSelectedOption, setViewSelectedOption] = useState("Recommended");
  const dropDownRef = useRef(null)

  const sortDropDown = () => {
    setIsSortDropDown(!isSortDropDown);
  };

  const handleSortDropDownList = (option, view) => {
    setSortOption(option);
    setIsSortDropDown(!isSortDropDown);
    setViewSelectedOption(view);
  };

  // üîµ Ïô∏Î∂Ä ÌÅ¥Î¶≠ Ïãú Í∫ºÏßÄÍ≤å ÌïòÍ∏∞
  useEffect( () => {
    const handleClickOutside = (e) => {
      if(dropDownRef.current && !dropDownRef.current.contains(e.target)){
        setIsSortDropDown(false)
      }
    }

    // ÎìúÎ°≠Îã§Ïö¥Ïù¥ Ïó¥Î†§ ÏûàÏùÑ ÎïåÎßå, ÎßàÏö∞Ïä§ ÌÅ¥Î¶≠Ïóê ÎåÄÌï¥ÏÑú, outside Ìï∏Îì§ ÌÅ¥Î¶≠ÏùÑ Ïã§ÌñâÏãúÌÇ®Îã§.
    if(isSortDropDown){
      document.addEventListener('mousedown', handleClickOutside)
    }

    // ÌÅ¥Î¶∞ÏóÖ Ìï®Ïàò => Îã§Î•∏ ÎßàÏö∞Ïä§ÌÅ¥Î¶≠Ïóê Î∞òÏùëÌïòÏßÄ ÏïäÎèÑÎ°ù ÎßåÎì§Í∏∞
    return () => {
      document.removeEventListener('mousedown' , handleClickOutside);
    }
  } , [isSortDropDown])
  

  return (
    <>
      <section ref={dropDownRef}>
        <div
          className="
            px-4 font-medium h-[45px] border-[1.5px] text-[14px]
            border-gray-200/90 rounded-lg relative 
            flex items-center justify-between  cursor-pointer  
            hover:shadow-sortDropDownBox text-gray-700 "
          onClick={sortDropDown}
        >
          <span className="min-w-[125px] text-gray-800">
            {viewSelectedOption}
          </span>
          <DropDownArrow isSortDropDown={isSortDropDown} />

          {isSortDropDown ? (
            <DropDownListOption
              handleSortDropDownList={handleSortDropDownList}
              sortOption={sortOption}
            />
          ) : null}
        </div>
      </section>

    </>
  );
};

export default SelectSort;

{/* Ïù¥Ï†Ñ ÎìúÎ°≠Îã§Ïö¥ */}
{/* <section className="flex mr-auto x-32">
  <select
    name=""
    id=""
    onChange={(e) => setSortOption(e.target.value)}
    className="appearance-none"
  >
    <option value={"recommended"} className="hover:bg-green-300">
      Recommended
    </option>

    <option value={"title_ascending"}> Title (A to Z) </option>
    <option value={"title_descending"}> Title (Z to A) </option>

    <option value={"date_ascending"}> Past Feature </option>
    <option value={"date_descending"}> Recent Feature </option>
  </select>
</section> */}